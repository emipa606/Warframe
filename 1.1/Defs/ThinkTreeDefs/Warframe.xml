<?xml version="1.0" encoding="utf-8" ?>
<Defs>

	<ThinkTreeDef>
		<defName>Warframe</defName>
		<thinkRoot Class="ThinkNode_Priority">
			<subNodes>
        <!-- Do lovin' -->

            
        <!-- If we HAVE to keep lying down... -->
        <li Class="ThinkNode_ConditionalMustKeepLyingDown">
          <subNodes>
            <!-- Do a queued job if possible (e.g. watch tv in bed) -->
            <li Class="ThinkNode_QueuedJob">
              <inBedOnly>true</inBedOnly>
            </li>

            <!-- Get joy -->

            
            <!-- Keep lying down -->
            <li Class="JobGiver_KeepLyingDown" />
          </subNodes>
        </li>
      
        <li Class="ThinkNode_Subtree">
          <treeDef>Downed</treeDef>
        </li>
		<!--
        <li Class="ThinkNode_Subtree">
          <treeDef>BurningResponse</treeDef>
        </li>
		-->
		<!--
        <li Class="ThinkNode_Subtree">
          <treeDef>MentalStateCritical</treeDef>
        </li>
        -->
        <!-- React to close melee threat -->
        <li Class="JobGiver_ReactToCloseMeleeThreat" />
		
            
        <!-- Mental state non critical 
        <li Class="ThinkNode_Subtree">
          <treeDef>MentalStateNonCritical</treeDef>
        </li>
-->
        <!-- Insertion hook for modders -->
        <li Class="ThinkNode_SubtreesByTag">
          <insertTag>Humanlike_PostMentalState</insertTag>
        </li>
        
        <!-- Do a queued job -->
        <li Class="ThinkNode_QueuedJob" />

        <!-- Wait if drafted -->
        <li Class="ThinkNode_ConditionalColonist">
          <subNodes>
            <li Class="ThinkNode_Tagger">
              <tagToGive>DraftedOrder</tagToGive>
              <subNodes>
                <li Class="JobGiver_MoveToStandable" />
                <li Class="JobGiver_Orders" />
              </subNodes>
            </li>
          </subNodes>
        </li>

        <!-- Self-tend if you're an NPC -->
        <li Class="ThinkNode_ConditionalNPCCanSelfTendNow">
          <subNodes>
            <li Class="JobGiver_SelfTend" />
          </subNodes>
        </li>

        <!-- Lord directives (high priority) -->
        <li Class="ThinkNode_JoinVoluntarilyJoinableLord">
          <dutyHook>HighPriority</dutyHook>
          <subNodes>
            <li Class="ThinkNode_Subtree">
              <treeDef>LordDuty</treeDef>
            </li>
          </subNodes>
        </li>

        <!-- Insertion hook for modders -->
        <li Class="ThinkNode_SubtreesByTag">
          <insertTag>Humanlike_PostDuty</insertTag>
        </li>
        
        <!-- Prisoner -->

        <!-- If on colonist team, do forced and emergency work -->
        <li Class="ThinkNode_ConditionalColonist">
          <subNodes>
            <!-- Seek allowed area 
            <li Class="JobGiver_SeekAllowedArea" />
            -->
            <!-- Seek safe temperatures 
            <li Class="JobGiver_SeekSafeTemperature" />
            -->
            <!-- Drop unnused inventory -->
            <li Class="JobGiver_DropUnusedInventory" />

            <!-- Emergency work -->
            <li Class="JobGiver_Work">
              <leaveJoinableLordIfIssuesJob>true</leaveJoinableLordIfIssuesJob>
              <emergency>true</emergency>
            </li>
            

            
            <!-- Lord directives (medium priority) -->
            <li Class="ThinkNode_JoinVoluntarilyJoinableLord">
              <dutyHook>MediumPriority</dutyHook>
              <subNodes>
                <li Class="ThinkNode_Subtree">
                  <treeDef>LordDuty</treeDef>
                </li>
              </subNodes>
            </li>
            
            <!-- Optimize apparel 
            <li Class="ThinkNode_Tagger">
              <tagToGive>ChangingApparel</tagToGive>
              <subNodes>
                <li Class="JobGiver_OptimizeApparel">
                  <leaveJoinableLordIfIssuesJob>true</leaveJoinableLordIfIssuesJob>
                </li>
              </subNodes>
            </li>
            -->
            <!-- Unload your inventory -->
            <li Class="ThinkNode_Tagger">
              <tagToGive>UnloadingOwnInventory</tagToGive>
              <subNodes>
                <li Class="JobGiver_UnloadYourInventory" />
              </subNodes>
            </li>
          </subNodes>
        </li>

        <!-- Behavior from traits -->


        <!-- Insertion hook for modders -->
        <li Class="ThinkNode_SubtreesByTag">
          <insertTag>Humanlike_PreMain</insertTag>
        </li>
        
        <!-- Main colonist behavior core -->

        <!-- Main wild man behavior core -->


        <!-- Insertion hook for modders -->
        <li Class="ThinkNode_SubtreesByTag">
          <insertTag>Humanlike_PostMain</insertTag>
        </li>

        <!-- Idle colonist -->
        <li Class="ThinkNode_ConditionalColonist">
          <subNodes>
            <li Class="ThinkNode_Tagger">
              <tagToGive>Idle</tagToGive>
              <subNodes>
                <!-- Do random joy activity -->
                <li Class="ThinkNode_ConditionalNeedPercentageAbove">
                  <need>Joy</need>
                  <threshold>0.9</threshold>
                  <invert>true</invert>
                  <subNodes>
                    <li Class="JobGiver_IdleJoy" />
                  </subNodes>
                </li>
              
                <!-- Wander -->

              </subNodes>
            </li>
          </subNodes>
        </li>

        <!-- Idle wild man -->


        <!-- If you're a neutral guest, if you're not hurt exit the map, otherwise use a medical bed -->
        <li Class="ThinkNode_ConditionalGuest">
          <subNodes>
            <li Class="ThinkNode_ConditionalNonPlayerNonHostileFactionOrFactionless">
              <subNodes>
                <li Class="ThinkNode_Tagger">
                  <tagToGive>RestingForMedicalReasons</tagToGive>
                  <subNodes>
                    <li Class="JobGiver_PatientGoToBed" />
                  </subNodes>
                </li>
                
                <li Class="ThinkNode_Tagger">
                  <tagToGive>Misc</tagToGive>
                  <subNodes>
                    <li Class="JobGiver_ExitMapBest">
                      <defaultLocomotion>Walk</defaultLocomotion>
                    </li>
                  </subNodes>
                </li>
              </subNodes>
            </li>
          </subNodes>
        </li>

				<!-- Final backup: If you're just here for no apparent reason, and not a colonist, leave the map
						 e.g. This happens for pawns who are downed during combat, then later self-heal -->
				<li Class="ThinkNode_ConditionalColonist">
					<invert>true</invert>
					<subNodes>
            <li Class="ThinkNode_Tagger">
              <tagToGive>Misc</tagToGive>
              <subNodes>
                <li Class="JobGiver_ExitMapBest">
                  <defaultLocomotion>Walk</defaultLocomotion>
                </li>
              </subNodes>
            </li>
					</subNodes>
				</li>

				<!-- If you can't leave, just wander -->
        <li Class="ThinkNode_Tagger">
          <tagToGive>Idle</tagToGive>
          <subNodes>
            <li Class="JobGiver_WanderAnywhere">
              <maxDanger>Deadly</maxDanger>
            </li>
          </subNodes>
        </li>

        <li Class="JobGiver_IdleError" />
			</subNodes>
		</thinkRoot>
	</ThinkTreeDef>
  
	<ThinkTreeDef>
		<defName>WarframeConstant</defName>
		<thinkRoot Class="ThinkNode_Priority">
			<subNodes>
				<li Class="ThinkNode_ConditionalCanDoConstantThinkTreeJobNow">
					<subNodes>
            <!-- Flee explosion -->
            <li Class="JobGiver_FleePotentialExplosion" />
        
            <!-- Join auto joinable caravan -->

            
            <!-- Hostility response -->
            <li Class="JobGiver_ConfigurableHostilityResponse" />
            
            <!-- Lord directives -->
            <li Class="ThinkNode_Subtree">
              <treeDef>LordDutyConstant</treeDef>
            </li>
					</subNodes>
				</li>
			</subNodes>
		</thinkRoot>
	</ThinkTreeDef>
  
</Defs>
